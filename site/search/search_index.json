{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Current Developers AstroCode Matasmathew Seakat MC. Kitten Face Tomgie WohoNavy Zeloi Information We are using the Knit framework by sleitnick. Knit API","title":"Home"},{"location":"#current-developers","text":"AstroCode Matasmathew Seakat MC. Kitten Face Tomgie WohoNavy Zeloi","title":"Current Developers"},{"location":"#information","text":"We are using the Knit framework by sleitnick. Knit API","title":"Information"},{"location":"utils/","text":"Utils These are utils that did not come with stock Knit. Janitor External docs Scheduler External docs Enumerator External docs","title":"Utils"},{"location":"utils/#utils","text":"These are utils that did not come with stock Knit.","title":"Utils"},{"location":"utils/#janitor","text":"External docs","title":"Janitor"},{"location":"utils/#scheduler","text":"External docs","title":"Scheduler"},{"location":"utils/#enumerator","text":"External docs","title":"Enumerator"},{"location":"client/components/LobbyCountdownComponent/","text":"LobbyCountdownComponent Description Description Not Found API Documentation Not Found","title":"LobbyCountdownComponent"},{"location":"client/components/LobbyCountdownComponent/#lobbycountdowncomponent","text":"","title":"LobbyCountdownComponent"},{"location":"client/components/LobbyCountdownComponent/#description","text":"Description Not Found","title":"Description"},{"location":"client/components/LobbyCountdownComponent/#api","text":"Documentation Not Found","title":"API"},{"location":"client/controllers/example/","text":"Controller Example Description Description Not Found API Documentation Not Found","title":"Example"},{"location":"client/controllers/example/#controller-example","text":"","title":"Controller Example"},{"location":"client/controllers/example/#description","text":"Description Not Found","title":"Description"},{"location":"client/controllers/example/#api","text":"Documentation Not Found","title":"API"},{"location":"client/modules/RaycastHitbox/","text":"RaycastHitbox Description Description Not Found API A point caster must be named \"$Caster.Point\". A segment caster must have two attachments named \"$Caster.Segment.UniqueName.0\" <-- this one is the origin of the raycast \"$Caster.Segment.UniqueName.1\" <-- this one is the tip of the raycast RaycastHitbox.new(object: Instance, whitelistedTags: {string}) object: The Instance with caster attachments as descendants whitelistedTags: The tags which raycasting will whitelist RaycastHitbox:Destroy() RaycastHitbox:Enable() RaycastHitbox:Disable() RaycastHitbox:EnableDebug() RaycastHitbox:DisableDebug() RaycastHitbox.OnHit:Connect(...)","title":"RaycastHitbox"},{"location":"client/modules/RaycastHitbox/#raycasthitbox","text":"","title":"RaycastHitbox"},{"location":"client/modules/RaycastHitbox/#description","text":"Description Not Found","title":"Description"},{"location":"client/modules/RaycastHitbox/#api","text":"A point caster must be named \"$Caster.Point\". A segment caster must have two attachments named \"$Caster.Segment.UniqueName.0\" <-- this one is the origin of the raycast \"$Caster.Segment.UniqueName.1\" <-- this one is the tip of the raycast RaycastHitbox.new(object: Instance, whitelistedTags: {string}) object: The Instance with caster attachments as descendants whitelistedTags: The tags which raycasting will whitelist RaycastHitbox:Destroy() RaycastHitbox:Enable() RaycastHitbox:Disable() RaycastHitbox:EnableDebug() RaycastHitbox:DisableDebug() RaycastHitbox.OnHit:Connect(...)","title":"API"},{"location":"knit/Constants/","text":"Constants Description Description Not Found API Documentation Not Found","title":"Constants"},{"location":"knit/Constants/#constants","text":"","title":"Constants"},{"location":"knit/Constants/#description","text":"Description Not Found","title":"Description"},{"location":"knit/Constants/#api","text":"Documentation Not Found","title":"API"},{"location":"knit/KnitClient/","text":"KnitClient Description Description Not Found API Documentation Not Found","title":"KnitClient"},{"location":"knit/KnitClient/#knitclient","text":"","title":"KnitClient"},{"location":"knit/KnitClient/#description","text":"Description Not Found","title":"Description"},{"location":"knit/KnitClient/#api","text":"Documentation Not Found","title":"API"},{"location":"knit/KnitServer/","text":"KnitServer Description Description Not Found API Documentation Not Found","title":"KnitServer"},{"location":"knit/KnitServer/#knitserver","text":"","title":"KnitServer"},{"location":"knit/KnitServer/#description","text":"Description Not Found","title":"Description"},{"location":"knit/KnitServer/#api","text":"Documentation Not Found","title":"API"},{"location":"knit/Version/","text":"Version Description The current version of the knit framework.","title":"Version"},{"location":"knit/Version/#version","text":"","title":"Version"},{"location":"knit/Version/#description","text":"The current version of the knit framework.","title":"Description"},{"location":"knit/components/LobbyCountdown/","text":"Lobby Countdown Description Description Not Found API Documentation Not Found","title":"LobbyCountdown"},{"location":"knit/components/LobbyCountdown/#lobby-countdown","text":"","title":"Lobby Countdown"},{"location":"knit/components/LobbyCountdown/#description","text":"Description Not Found","title":"Description"},{"location":"knit/components/LobbyCountdown/#api","text":"Documentation Not Found","title":"API"},{"location":"knit/controllers/AudioController/","text":"AudioController Description Description Not Found API Documentation Not Found","title":"AudioController"},{"location":"knit/controllers/AudioController/#audiocontroller","text":"","title":"AudioController"},{"location":"knit/controllers/AudioController/#description","text":"Description Not Found","title":"Description"},{"location":"knit/controllers/AudioController/#api","text":"Documentation Not Found","title":"API"},{"location":"knit/controllers/CameraController/","text":"CameraController Description CameraController Exposes methods for manipulating the camera. Internally, it also assigns the Gameplay camera on spawn. There are three cameras available: Gameplay, Static, and Interactable. Gameplay is over-the-shoulder with the mouse locked. Static unlocks the mouse and the camera does not follow the character; this is for cutscenes. Interactable unlocks the mouse and does not let you pan, but the camera still follows your character; this is for accessing menus. For camera modes where the mouse is unlocked, an invisible TextButton with Modal = true is set to visible. This forces the mouse to be moveable. API API: :FollowPath(path: {Vector3}) :GetCameraCFrame() :LookAt(from: Vector3, to: Vector3?) If no `to` is specific, `from` will be use as the `to` and the Camera will stay at its current position. :SetCameraMode(cameraMode: CameraModeEnum) :SetCameraOffset(cameraOffset: Vector3) CameraModule changes: Set computer camera movement to CameraToggle Set touch camera movement to Classic Note: Does not work with Follow on mobile CameraUI: > Comment out the implementation for CameraUI.setCameraModeToastEnabled > Comment out the implementation for CameraUI.setCameraModeToastOpen ClassicCamera: > Comment out the block that calls self:GetCameraToggleOffset() > Add a local offset at the end of ClassicCamera:Update() CameraInput: > Set holdPan and togglePan to true > Comment out the implementation for CameraInput.enableCameraToggleInput() > Comment out the implementation for CameraInput.disableCameraToggleInput() CameraModule: > Force return CameraModule.new() at the bottom","title":"CameraController"},{"location":"knit/controllers/CameraController/#cameracontroller","text":"","title":"CameraController"},{"location":"knit/controllers/CameraController/#description","text":"CameraController Exposes methods for manipulating the camera. Internally, it also assigns the Gameplay camera on spawn. There are three cameras available: Gameplay, Static, and Interactable. Gameplay is over-the-shoulder with the mouse locked. Static unlocks the mouse and the camera does not follow the character; this is for cutscenes. Interactable unlocks the mouse and does not let you pan, but the camera still follows your character; this is for accessing menus. For camera modes where the mouse is unlocked, an invisible TextButton with Modal = true is set to visible. This forces the mouse to be moveable.","title":"Description"},{"location":"knit/controllers/CameraController/#api","text":"API: :FollowPath(path: {Vector3}) :GetCameraCFrame() :LookAt(from: Vector3, to: Vector3?) If no `to` is specific, `from` will be use as the `to` and the Camera will stay at its current position. :SetCameraMode(cameraMode: CameraModeEnum) :SetCameraOffset(cameraOffset: Vector3) CameraModule changes: Set computer camera movement to CameraToggle Set touch camera movement to Classic Note: Does not work with Follow on mobile CameraUI: > Comment out the implementation for CameraUI.setCameraModeToastEnabled > Comment out the implementation for CameraUI.setCameraModeToastOpen ClassicCamera: > Comment out the block that calls self:GetCameraToggleOffset() > Add a local offset at the end of ClassicCamera:Update() CameraInput: > Set holdPan and togglePan to true > Comment out the implementation for CameraInput.enableCameraToggleInput() > Comment out the implementation for CameraInput.disableCameraToggleInput() CameraModule: > Force return CameraModule.new() at the bottom","title":"API"},{"location":"knit/controllers/CrownController/","text":"CrownController Description Description Not Found API Documentation Not Found","title":"CrownController"},{"location":"knit/controllers/CrownController/#crowncontroller","text":"","title":"CrownController"},{"location":"knit/controllers/CrownController/#description","text":"Description Not Found","title":"Description"},{"location":"knit/controllers/CrownController/#api","text":"Documentation Not Found","title":"API"},{"location":"knit/controllers/GameLoopController/","text":"GameLoopController Description GameLoopController Listens to gameplay state changes from GameLoopServices and changes client things accordingly. Currently, it only changes the audio based on whether the game state is in \"Lobby\", \"Gameplay\", or \"Podium\". API Documentation Not Found","title":"GameLoopController"},{"location":"knit/controllers/GameLoopController/#gameloopcontroller","text":"","title":"GameLoopController"},{"location":"knit/controllers/GameLoopController/#description","text":"GameLoopController Listens to gameplay state changes from GameLoopServices and changes client things accordingly. Currently, it only changes the audio based on whether the game state is in \"Lobby\", \"Gameplay\", or \"Podium\".","title":"Description"},{"location":"knit/controllers/GameLoopController/#api","text":"Documentation Not Found","title":"API"},{"location":"knit/controllers/InputService/","text":"InputService Description InputService Helps with getting the player's input type. It makes an initial guess based on UserInputService.TouchEnabled and GuiService:IsTenFootInterface(). The possible input types are Gamepad, Keyboard, and Touch. API .InputTypeEnum .InputTypeChanged signal :GetInputType()","title":"InputService"},{"location":"knit/controllers/InputService/#inputservice","text":"","title":"InputService"},{"location":"knit/controllers/InputService/#description","text":"InputService Helps with getting the player's input type. It makes an initial guess based on UserInputService.TouchEnabled and GuiService:IsTenFootInterface(). The possible input types are Gamepad, Keyboard, and Touch.","title":"Description"},{"location":"knit/controllers/InputService/#api","text":".InputTypeEnum .InputTypeChanged signal :GetInputType()","title":"API"},{"location":"knit/controllers/OnRuntimeController/","text":"OnRuntimeController Description Description Not Found API Documentation Not Found","title":"OnRuntimeController"},{"location":"knit/controllers/OnRuntimeController/#onruntimecontroller","text":"","title":"OnRuntimeController"},{"location":"knit/controllers/OnRuntimeController/#description","text":"Description Not Found","title":"Description"},{"location":"knit/controllers/OnRuntimeController/#api","text":"Documentation Not Found","title":"API"},{"location":"knit/controllers/TimerWallController/","text":"TimerWallController Description Description Not Found API Documentation Not Found","title":"TimerWallController"},{"location":"knit/controllers/TimerWallController/#timerwallcontroller","text":"","title":"TimerWallController"},{"location":"knit/controllers/TimerWallController/#description","text":"Description Not Found","title":"Description"},{"location":"knit/controllers/TimerWallController/#api","text":"Documentation Not Found","title":"API"},{"location":"knit/controllers/character/CharacterController/","text":"CharacterController Description CharacterController Provides character-related fields and signals for client code. API Fields: .Character The player's character .Humanoid The player's Humanoid .IsLoaded Set to true before CharacterLoaded fires. Set to false on cleanup. .RootPart Signals: .CharacterAdded Fires immediately when the character is added. .CharacterLoaded Fires after calling WaitForChild on Humanoid, HumanoidRootPart, and Head. Methods: :CreateDeathJanitor() Returns a janitor that will be cleaned up when the character dies.","title":"CharacterController"},{"location":"knit/controllers/character/CharacterController/#charactercontroller","text":"","title":"CharacterController"},{"location":"knit/controllers/character/CharacterController/#description","text":"CharacterController Provides character-related fields and signals for client code.","title":"Description"},{"location":"knit/controllers/character/CharacterController/#api","text":"Fields: .Character The player's character .Humanoid The player's Humanoid .IsLoaded Set to true before CharacterLoaded fires. Set to false on cleanup. .RootPart Signals: .CharacterAdded Fires immediately when the character is added. .CharacterLoaded Fires after calling WaitForChild on Humanoid, HumanoidRootPart, and Head. Methods: :CreateDeathJanitor() Returns a janitor that will be cleaned up when the character dies.","title":"API"},{"location":"knit/controllers/character/RagdollController/","text":"RagdollController Description RagdollController Facilitates getting up by spamming a button. API Documentation Not Found","title":"RagdollController"},{"location":"knit/controllers/character/RagdollController/#ragdollcontroller","text":"","title":"RagdollController"},{"location":"knit/controllers/character/RagdollController/#description","text":"RagdollController Facilitates getting up by spamming a button.","title":"Description"},{"location":"knit/controllers/character/RagdollController/#api","text":"Documentation Not Found","title":"API"},{"location":"knit/controllers/hammer/HammerController/","text":"HammerController Description HammerController Binds winding up and swinging to a context action. API :GetWindUpAlpha() Returns a linear value in [0, 1] for progression through the wind up animation. :GetPowerAlpha() Returns a nonlinear value in [0, 1] for hammer charge based on progression through wind up. :GetHammerDirection() Returns the direction of the hammer collider or nil.","title":"HammerController"},{"location":"knit/controllers/hammer/HammerController/#hammercontroller","text":"","title":"HammerController"},{"location":"knit/controllers/hammer/HammerController/#description","text":"HammerController Binds winding up and swinging to a context action.","title":"Description"},{"location":"knit/controllers/hammer/HammerController/#api","text":":GetWindUpAlpha() Returns a linear value in [0, 1] for progression through the wind up animation. :GetPowerAlpha() Returns a nonlinear value in [0, 1] for hammer charge based on progression through wind up. :GetHammerDirection() Returns the direction of the hammer collider or nil.","title":"API"},{"location":"knit/controllers/hammer/HitController/","text":"HitController Description HitController Determines what to do when the hammer hits something. API :_UpdateDebounceLists() Keeps a list of times for when individual objects were hit and a list of times for when individual characters were hit. If an object/character is on the list when they are hit, the hit does not register. They are removed from the list after a debounce time. :ObjectHit() Called by HammerController for the RaycastHitbox hits something. Player character hits are sent to the server via HitService:CharacterHit(). Object hits have custom logic for what to do with them. NPC hits do nothing.","title":"HitController"},{"location":"knit/controllers/hammer/HitController/#hitcontroller","text":"","title":"HitController"},{"location":"knit/controllers/hammer/HitController/#description","text":"HitController Determines what to do when the hammer hits something.","title":"Description"},{"location":"knit/controllers/hammer/HitController/#api","text":":_UpdateDebounceLists() Keeps a list of times for when individual objects were hit and a list of times for when individual characters were hit. If an object/character is on the list when they are hit, the hit does not register. They are removed from the list after a debounce time. :ObjectHit() Called by HammerController for the RaycastHitbox hits something. Player character hits are sent to the server via HitService:CharacterHit(). Object hits have custom logic for what to do with them. NPC hits do nothing.","title":"API"},{"location":"knit/controllers/ui/KingIndicatorController/","text":"KingIndicatorController Description KingIndicatorController Displays the new king. The text flies in if there hasn't been a new king in CURRENT_KING_DURATION. If the text is already on the screen when there's a new king, it instead pumps its size temporarily as a visual indication of the new king. API Documentation Not Found","title":"KingIndicatorController"},{"location":"knit/controllers/ui/KingIndicatorController/#kingindicatorcontroller","text":"","title":"KingIndicatorController"},{"location":"knit/controllers/ui/KingIndicatorController/#description","text":"KingIndicatorController Displays the new king. The text flies in if there hasn't been a new king in CURRENT_KING_DURATION. If the text is already on the screen when there's a new king, it instead pumps its size temporarily as a visual indication of the new king.","title":"Description"},{"location":"knit/controllers/ui/KingIndicatorController/#api","text":"Documentation Not Found","title":"API"},{"location":"knit/controllers/ui/ProgressBarController/","text":"ProgressBarController Description Description Not Found API Documentation Not Found","title":"ProgressBarController"},{"location":"knit/controllers/ui/ProgressBarController/#progressbarcontroller","text":"","title":"ProgressBarController"},{"location":"knit/controllers/ui/ProgressBarController/#description","text":"Description Not Found","title":"Description"},{"location":"knit/controllers/ui/ProgressBarController/#api","text":"Documentation Not Found","title":"API"},{"location":"knit/controllers/ui/UserInterfaceController/","text":"UserInterfaceController Description Description Not Found API Documentation Not Found","title":"UserInterfaceController"},{"location":"knit/controllers/ui/UserInterfaceController/#userinterfacecontroller","text":"","title":"UserInterfaceController"},{"location":"knit/controllers/ui/UserInterfaceController/#description","text":"Description Not Found","title":"Description"},{"location":"knit/controllers/ui/UserInterfaceController/#api","text":"Documentation Not Found","title":"API"},{"location":"server/gamemodes/","text":"GameModes Description Description Not Found API Documentation Not Found","title":"Game Modes"},{"location":"server/gamemodes/#gamemodes","text":"","title":"GameModes"},{"location":"server/gamemodes/#description","text":"Description Not Found","title":"Description"},{"location":"server/gamemodes/#api","text":"Documentation Not Found","title":"API"},{"location":"server/modules/","text":"Server Modules ProfileService Description Description Not Found API External docs TimeUtils Description Description Not Found API Documentation Not Found","title":"Modules"},{"location":"server/modules/#server-modules","text":"","title":"Server Modules"},{"location":"server/modules/#profileservice","text":"","title":"ProfileService"},{"location":"server/modules/#description","text":"Description Not Found","title":"Description"},{"location":"server/modules/#api","text":"External docs","title":"API"},{"location":"server/modules/#timeutils","text":"","title":"TimeUtils"},{"location":"server/modules/#description_1","text":"Description Not Found","title":"Description"},{"location":"server/modules/#api_1","text":"Documentation Not Found","title":"API"},{"location":"server/components/BubbleComponent/","text":"BubbleComponent Description Description Not Found API Documentation Not Found","title":"BubbleComponent"},{"location":"server/components/BubbleComponent/#bubblecomponent","text":"","title":"BubbleComponent"},{"location":"server/components/BubbleComponent/#description","text":"Description Not Found","title":"Description"},{"location":"server/components/BubbleComponent/#api","text":"Documentation Not Found","title":"API"},{"location":"server/components/HillComponent/","text":"HillComponent Description HillComponent Replaces the forcefield hills with a rotating beam circle. The math: https://www.desmos.com/calculator/xrpslugw6x API Documentation Not Found","title":"HillComponent"},{"location":"server/components/HillComponent/#hillcomponent","text":"","title":"HillComponent"},{"location":"server/components/HillComponent/#description","text":"HillComponent Replaces the forcefield hills with a rotating beam circle. The math: https://www.desmos.com/calculator/xrpslugw6x","title":"Description"},{"location":"server/components/HillComponent/#api","text":"Documentation Not Found","title":"API"},{"location":"server/components/KillBrickComponent/","text":"LobbyCountdown Description Description Not Found API Documentation Not Found","title":"KillBrickComponent"},{"location":"server/components/KillBrickComponent/#lobbycountdown","text":"","title":"LobbyCountdown"},{"location":"server/components/KillBrickComponent/#description","text":"Description Not Found","title":"Description"},{"location":"server/components/KillBrickComponent/#api","text":"Documentation Not Found","title":"API"},{"location":"server/components/LeaderboardComponent/","text":"LeaderboardComponent Description Description Not Found API Documentation Not Found","title":"LeaderboardComponent"},{"location":"server/components/LeaderboardComponent/#leaderboardcomponent","text":"","title":"LeaderboardComponent"},{"location":"server/components/LeaderboardComponent/#description","text":"Description Not Found","title":"Description"},{"location":"server/components/LeaderboardComponent/#api","text":"Documentation Not Found","title":"API"},{"location":"server/components/RagdollBrickComponent/","text":"RagdollBrickComponent Description Description Not Found API Documentation Not Found","title":"RagdollBrickComponent"},{"location":"server/components/RagdollBrickComponent/#ragdollbrickcomponent","text":"","title":"RagdollBrickComponent"},{"location":"server/components/RagdollBrickComponent/#description","text":"Description Not Found","title":"Description"},{"location":"server/components/RagdollBrickComponent/#api","text":"Documentation Not Found","title":"API"},{"location":"server/components/RagdollComponent/","text":"RagdollComponent RagdollComponent Description Description Not Found API Ragdoll Component by Astro and Tomgie Ragdoll the tagged character and un-ragdoll when the tag is removed via Janitor. How to use: Assign \"Ragdoll\" tag to the character model. Unassign the tag to return the character to its normal state. RagdollConstants Description Description Not Found API This is a collection of constants that describe the ragdoll. JOINT_PROPERTIES: The properties of each joint in the ragdoll. COLLISION_FILTERS: The ragdoll cannot properly fall if its limbs are colliding. This describes the NoCollisionConstraints to create so that the limbs do not collide with each other. PART_TO_JOINT_MAP: A map between the names of the parts and the names of their respective joints. BuildConstraintsRig Description Description Not Found API This module builds the ragdoll. It returns a dictionary of joints and a dictionary of NoCollisionConstraints. The joint dictionary is structured like this: { Head = { Attachment0 = [Attachment object], Attachment1 = [Attachment object], Constraint = [BallSocketConstraint object], Motor = [Motor6D object], Offset = [CFrame of Attachment0 offset from Motor.C0] }, LeftArm = {...}, RightArm = {...}, LeftLeg = {...}, RightLeg = {...}, } The NoCollisionConstraints dictionary is structured like this: { Arms = { [NoCollisionConstraint], [NoCollisionConstraint], ... }, Legs = {...}, Hips = {...} } Each index in the NoCollisionConstraints dictionary has the minimum amount of NoCollisionConstraint objects required to connect all of the parts in each index of Constants.ANIMATE_COLLISION_FILTERS to every other part in the index.","title":"RagdollComponent"},{"location":"server/components/RagdollComponent/#ragdollcomponent","text":"","title":"RagdollComponent"},{"location":"server/components/RagdollComponent/#ragdollcomponent_1","text":"","title":"RagdollComponent"},{"location":"server/components/RagdollComponent/#description","text":"Description Not Found","title":"Description"},{"location":"server/components/RagdollComponent/#api","text":"Ragdoll Component by Astro and Tomgie Ragdoll the tagged character and un-ragdoll when the tag is removed via Janitor. How to use: Assign \"Ragdoll\" tag to the character model. Unassign the tag to return the character to its normal state.","title":"API"},{"location":"server/components/RagdollComponent/#ragdollconstants","text":"","title":"RagdollConstants"},{"location":"server/components/RagdollComponent/#description_1","text":"Description Not Found","title":"Description"},{"location":"server/components/RagdollComponent/#api_1","text":"This is a collection of constants that describe the ragdoll. JOINT_PROPERTIES: The properties of each joint in the ragdoll. COLLISION_FILTERS: The ragdoll cannot properly fall if its limbs are colliding. This describes the NoCollisionConstraints to create so that the limbs do not collide with each other. PART_TO_JOINT_MAP: A map between the names of the parts and the names of their respective joints.","title":"API"},{"location":"server/components/RagdollComponent/#buildconstraintsrig","text":"","title":"BuildConstraintsRig"},{"location":"server/components/RagdollComponent/#description_2","text":"Description Not Found","title":"Description"},{"location":"server/components/RagdollComponent/#api_2","text":"This module builds the ragdoll. It returns a dictionary of joints and a dictionary of NoCollisionConstraints. The joint dictionary is structured like this: { Head = { Attachment0 = [Attachment object], Attachment1 = [Attachment object], Constraint = [BallSocketConstraint object], Motor = [Motor6D object], Offset = [CFrame of Attachment0 offset from Motor.C0] }, LeftArm = {...}, RightArm = {...}, LeftLeg = {...}, RightLeg = {...}, } The NoCollisionConstraints dictionary is structured like this: { Arms = { [NoCollisionConstraint], [NoCollisionConstraint], ... }, Legs = {...}, Hips = {...} } Each index in the NoCollisionConstraints dictionary has the minimum amount of NoCollisionConstraint objects required to connect all of the parts in each index of Constants.ANIMATE_COLLISION_FILTERS to every other part in the index.","title":"API"},{"location":"server/components/UnragdollBrickComponent/","text":"UnragdollBrickComponent Description Description Not Found API Documentation Not Found","title":"UnragdollBrickComponent"},{"location":"server/components/UnragdollBrickComponent/#unragdollbrickcomponent","text":"","title":"UnragdollBrickComponent"},{"location":"server/components/UnragdollBrickComponent/#description","text":"Description Not Found","title":"Description"},{"location":"server/components/UnragdollBrickComponent/#api","text":"Documentation Not Found","title":"API"},{"location":"server/services/characters/DeathService/","text":"DeathService Description Ragdolls a character when it dies, but not when its RootPart is below workspace.FallenPartsDestroyHeight . API Documentation Not Found","title":"DeathService"},{"location":"server/services/characters/DeathService/#deathservice","text":"","title":"DeathService"},{"location":"server/services/characters/DeathService/#description","text":"Ragdolls a character when it dies, but not when its RootPart is below workspace.FallenPartsDestroyHeight .","title":"Description"},{"location":"server/services/characters/DeathService/#api","text":"Documentation Not Found","title":"API"},{"location":"server/services/characters/RagdollService/","text":"RagdollService Description Description Not Found API Applies and resets player ragdolls. This is done by adding/removing the \"Ragdoll\" tag from a character. The Ragdoll component handles the actual ragdolling implementation. Clients can also tell RagdollService to reset their ragdoll by calling Client:GetUp(). :ApplyRagdoll(character) Adds the \"Ragdoll\" tag to the character and fires the Client.IsRagdolledChanged remote. :RemoveRagdoll(character) Removes the \"Ragdoll\" tag from the character and fires the Client.IsRagdolledChanged remote. Client:GetUp(player: Player) Called by clients. Removes their ragdoll.","title":"RagdollService"},{"location":"server/services/characters/RagdollService/#ragdollservice","text":"","title":"RagdollService"},{"location":"server/services/characters/RagdollService/#description","text":"Description Not Found","title":"Description"},{"location":"server/services/characters/RagdollService/#api","text":"Applies and resets player ragdolls. This is done by adding/removing the \"Ragdoll\" tag from a character. The Ragdoll component handles the actual ragdolling implementation. Clients can also tell RagdollService to reset their ragdoll by calling Client:GetUp(). :ApplyRagdoll(character) Adds the \"Ragdoll\" tag to the character and fires the Client.IsRagdolledChanged remote. :RemoveRagdoll(character) Removes the \"Ragdoll\" tag from the character and fires the Client.IsRagdolledChanged remote. Client:GetUp(player: Player) Called by clients. Removes their ragdoll.","title":"API"},{"location":"server/services/data/PlayerCharacterService/","text":"PlayerCharacterService Description Description Not Found API :RegisterVariable(name: string, value: any) :RegisterCallback(variableName: string, callback: function) :GetPlayerList() :GetHumanoidList() :GetRootPartList() :GetRootPartFromUserId(userId: number) :GetHumanoidFromUserId(userId: number) :GetCharacterFromUserId(userId: number) :GetPlayerData(player: Player) :GetPlayerDataFromUserId(userId: number) :GetPlayerDataFromCharacter(character: model)","title":"PlayerCharacterService"},{"location":"server/services/data/PlayerCharacterService/#playercharacterservice","text":"","title":"PlayerCharacterService"},{"location":"server/services/data/PlayerCharacterService/#description","text":"Description Not Found","title":"Description"},{"location":"server/services/data/PlayerCharacterService/#api","text":":RegisterVariable(name: string, value: any) :RegisterCallback(variableName: string, callback: function) :GetPlayerList() :GetHumanoidList() :GetRootPartList() :GetRootPartFromUserId(userId: number) :GetHumanoidFromUserId(userId: number) :GetCharacterFromUserId(userId: number) :GetPlayerData(player: Player) :GetPlayerDataFromUserId(userId: number) :GetPlayerDataFromCharacter(character: model)","title":"API"},{"location":"server/services/data/ProfileService/","text":"PlayerCharacterService Description Makes player data accessible for other scripts API Ex. local profile = ProfileService : GetProfile ( userid ) profile : AddCurrency ( \"Gold\" , 5 ) profile : GetCurrencyOfType ( \"Gold\" ) API: ProfileService:GetProfile(userId: number) ProfileService:GetProfiles() ProfileService:UpdateTopPlayer() Profile:GetCurrencyOfType(name: string) Profile:GetAllCurrency() Profile:AddCurrencyOfType(name: string, amount: number) Profile:SubtractCurrencyOfType(name: string, amount: number) Profile:GetCosmeticsOfType(cosmeticType: string)","title":"ProfileService"},{"location":"server/services/data/ProfileService/#playercharacterservice","text":"","title":"PlayerCharacterService"},{"location":"server/services/data/ProfileService/#description","text":"Makes player data accessible for other scripts","title":"Description"},{"location":"server/services/data/ProfileService/#api","text":"Ex. local profile = ProfileService : GetProfile ( userid ) profile : AddCurrency ( \"Gold\" , 5 ) profile : GetCurrencyOfType ( \"Gold\" ) API: ProfileService:GetProfile(userId: number) ProfileService:GetProfiles() ProfileService:UpdateTopPlayer() Profile:GetCurrencyOfType(name: string) Profile:GetAllCurrency() Profile:AddCurrencyOfType(name: string, amount: number) Profile:SubtractCurrencyOfType(name: string, amount: number) Profile:GetCosmeticsOfType(cosmeticType: string)","title":"API"},{"location":"server/services/gameplay/GameLoopService/","text":"GameLoopService Description Runs an infinite gameloop. API API: GameLoopService:GetPointGoal() Returns how many points are needed to win the current gamemode","title":"GameLoopService"},{"location":"server/services/gameplay/GameLoopService/#gameloopservice","text":"","title":"GameLoopService"},{"location":"server/services/gameplay/GameLoopService/#description","text":"Runs an infinite gameloop.","title":"Description"},{"location":"server/services/gameplay/GameLoopService/#api","text":"API: GameLoopService:GetPointGoal() Returns how many points are needed to win the current gamemode","title":"API"},{"location":"server/services/gameplay/LobbyService/","text":"LobbyService Description Description Not Found API API: GameLoopService:GetPointGoal() Returns how many points are needed to win the current gamemode","title":"LobbyService"},{"location":"server/services/gameplay/LobbyService/#lobbyservice","text":"","title":"LobbyService"},{"location":"server/services/gameplay/LobbyService/#description","text":"Description Not Found","title":"Description"},{"location":"server/services/gameplay/LobbyService/#api","text":"API: GameLoopService:GetPointGoal() Returns how many points are needed to win the current gamemode","title":"API"},{"location":"server/services/gameplay/MapService/","text":"MapService Description Description Not Found API API: :LoadMap(gameModeName: string, mapName: string) Yielding method. Loads the terrain/parts for a given map. :UnloadMap() Clears all terrain and removes all children from Map folder. :GetRandomGameModeMap(gameModeName: string) :GetGameModeMaps(gameModeName: string) :GetMapContainer()","title":"MapService"},{"location":"server/services/gameplay/MapService/#mapservice","text":"","title":"MapService"},{"location":"server/services/gameplay/MapService/#description","text":"Description Not Found","title":"Description"},{"location":"server/services/gameplay/MapService/#api","text":"API: :LoadMap(gameModeName: string, mapName: string) Yielding method. Loads the terrain/parts for a given map. :UnloadMap() Clears all terrain and removes all children from Map folder. :GetRandomGameModeMap(gameModeName: string) :GetGameModeMaps(gameModeName: string) :GetMapContainer()","title":"API"},{"location":"server/services/general/ClockService/","text":"ClockService Description Create timers that count down from a specified time or stopwatches that count up from 0. Timers use Signals to be able to fire functions when they complete. Ex. local timer = ClockService:newTimer(10) timer.Completed:Connect(function() end) timer.Completed:Wait() API API: ClockService:newTimer(duration: number?, name: string?) ClockService:newStopwatch(name: string?) ClockService:GetTimer(name: string) ClockService:GetStopwatch(name: string) k Timer:GetTime() Timer:Destroy() Stopwatch:GetTime() Stopwatch:Benchmark() Stopwatch:Destroy()","title":"ClockService"},{"location":"server/services/general/ClockService/#clockservice","text":"","title":"ClockService"},{"location":"server/services/general/ClockService/#description","text":"Create timers that count down from a specified time or stopwatches that count up from 0. Timers use Signals to be able to fire functions when they complete. Ex. local timer = ClockService:newTimer(10) timer.Completed:Connect(function() end) timer.Completed:Wait()","title":"Description"},{"location":"server/services/general/ClockService/#api","text":"API: ClockService:newTimer(duration: number?, name: string?) ClockService:newStopwatch(name: string?) ClockService:GetTimer(name: string) ClockService:GetStopwatch(name: string) k Timer:GetTime() Timer:Destroy() Stopwatch:GetTime() Stopwatch:Benchmark() Stopwatch:Destroy()","title":"API"},{"location":"server/services/hammers/HammerService/","text":"HitService Description Description Not Found API Documentation Not Found","title":"HammerService"},{"location":"server/services/hammers/HammerService/#hitservice","text":"","title":"HitService"},{"location":"server/services/hammers/HammerService/#description","text":"Description Not Found","title":"Description"},{"location":"server/services/hammers/HammerService/#api","text":"Documentation Not Found","title":"API"},{"location":"server/services/hammers/HitService/","text":"HammerService Description Description Not Found API Documentation Not Found","title":"HitService"},{"location":"server/services/hammers/HitService/#hammerservice","text":"","title":"HammerService"},{"location":"server/services/hammers/HitService/#description","text":"Description Not Found","title":"Description"},{"location":"server/services/hammers/HitService/#api","text":"Documentation Not Found","title":"API"}]}